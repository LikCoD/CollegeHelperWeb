//autogenerated using zod-cli
import { z } from 'zod';
import { DateTime } from 'luxon';
import { SubjectScheme } from './../../../../../../../shared/entities/schemes/types.scheme';
import { GroupScheme } from './../../../../../../../shared/entities/schemes/types.scheme';
import { TeacherScheme } from './../../../../../../../shared/entities/schemes/types.scheme';
import { RoomScheme } from './../../../../../../../shared/entities/schemes/types.scheme';

export const JournalRowTitleScheme = z.object({
	id: z.string().nullish(),
	title: z.string(),
});

export const MarkScheme = z.object({
	id: z.string(),
	mark: z.string(),
	markWeight: z.number(),
});

export const AbsenceScheme = z.object({
	id: z.string(),
	time: z.number().nullish(),
});

export const PointScheme = z.object({
	x: z.number(),
	y: z.number(),
});

export const JournalCellScheme = z.object({
	lessonsIDs: z.array(z.string()),
	marks: z.array(MarkScheme),
	absences: z.array(AbsenceScheme),
	point: PointScheme,
});

export const JournalDateScheme = z.object({
	id: z.string().nullish(),
	date: z.string().datetime().transform(dt => DateTime.fromISO(dt)),
});

export const JournalDisplayConfigScheme = z.object({
	title: z.string(),
	types: z.array(z.string()).nullish(),
	marks: z.array(z.string()).nullish(),
	showAbsences: z.boolean(),
	showLatency: z.boolean(),
	availableMarkIDs: z.array(z.string()).nullish(),
});

export const JournalInfoScheme = z.object({
	editable: z.boolean(),
	configs: z.array(JournalDisplayConfigScheme).nullish(),
});

export const JournalScheme = z.object({
	rowTitles: z.array(JournalRowTitleScheme),
	cells: z.array(JournalCellScheme),
	dates: z.array(JournalDateScheme),
	info: JournalInfoScheme,
});

export const JournalTypeScheme = z.object({
	id: z.string(),
	availableMarks: z.array(MarkScheme),
	assignedColor: z.string(),
	absenceMark: z.string(),
	type: z.string(),
});

export const JournalLessonScheme = z.object({
	id: z.string().nullish(),
	studyPlaceID: z.string().nullish(),
	primaryColor: z.string(),
	journalCellColor: z.string().nullish(),
	secondaryColor: z.string().nullish(),
	endDate: z.string().datetime().transform(dt => DateTime.fromISO(dt)),
	startDate: z.string().datetime().transform(dt => DateTime.fromISO(dt)),
	lessonIndex: z.number(),
	subject: SubjectScheme,
	group: GroupScheme,
	teacher: TeacherScheme,
	room: RoomScheme,
	type: JournalTypeScheme,
	title: z.string().nullish(),
	homework: z.string().nullish(),
	description: z.string().nullish(),
	marks: z.array(MarkScheme),
	absence: AbsenceScheme.nullish(),
});
